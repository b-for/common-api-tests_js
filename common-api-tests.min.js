var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){a=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global,a];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}return globalThis};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.findIndex",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).i}},"es6","es3");
function testCommon(a,b,c,d){logResponseBody();a&&checkStatusCode(a);b&&checkContentType(b);c&&checkJSONSchema(c);d&&checkLocation(d)}function testCommonAndTime(a,b,c,d,e){testCommon(a,c,d,e);b&&checkTime(b)}function logResponseBody(){responseBody&&it("response body: "+responseBody,function(){})}function getType(a){return Object.prototype.toString.call(a).replace(/^\[object |\]$/g,"")}
function convertTime(a){if("Number"===getType(a))return 1E3<=a?a/1E3+"s":a+"ms";throw new TypeError('Parameter value must be of type "number" for function "convertTime(time)"');}function delayTime(a){if("Number"===getType(a))console.log("Delaying for "+convertTime(a)+"..."),setTimeout(function(){return console.log("Delay finished")},a);else throw new TypeError('Parameter value must be of type "number" for function "delayTime(time)"');}
function generateNumber(a,b){if("Number"===getType(a)&&"Number"===getType(b))return a<=b?Math.floor(Math.random()*(b-a+1)+a):Math.floor(Math.random()*(a-b+1)+b);throw new TypeError('Parameter values must be of type "number" for function "generateNumber(min, max)"');}
function generateString(a){if("Number"===getType(a)){for(var b="",c=0;c<a;c++)b+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".charAt(Math.floor(52*Math.random()));return b}throw new TypeError('Parameter value must be of type "number" for function "generateString(length)"');}
function getIndexObjectInArray(a,b,c){if(Array.isArray(a)&&a.every(function(a){return"Object"===getType(a)})&&"String"===getType(b))return a.findIndex(function(a){return a[b]===c});throw new TypeError('Parameter values must be of type "Array.<Object>, string, any" for function "getIndexObjectInArray(array, property, value)"');}
function checkTime(a){if("Number"===getType(a))if(0<a)it("should respond within "+convertTime(a),function(){response.time.should.be.below(a)});else throw new RangeError('Parameter value must be a strictly positive number for function "checkTime(time)"');else throw new TypeError('Parameter value must be a number for function "checkTime(time)"');}
function checkStatusCode(a){if("Number"===getType(a))switch(!0){case 100<=a&&199>=a:it("should be an information response",function(){response.should.have.status(a)});break;case 200<=a&&299>=a:it("should be a successful response",function(){response.should.have.status(a)});break;case 300<=a&&399>=a:it("should be a redirection response",function(){response.should.have.status(a)});break;case 400<=a&&499>=a:it("should be a client error response",function(){response.should.have.status(a)});break;case 500<=
a&&599>=a:it("should be a server error response",function(){response.should.have.status(a)});break;default:throw new RangeError('Parameter value must be an existing status code number for function "checkStatusCode(statusCode)"');}else throw new TypeError('Parameter value must be a number for function "checkStatusCode(statusCode)"');}
function checkContentType(a){if("String"===getType(a))it('should be of type "'+a+'"',function(){response.type.should.equal(a)});else throw new TypeError('Parameter value must be a string for function "checkContentType(contentType)"');}function checkJSONSchema(a){if("Object"===getType(a))it("should match against the JSON schema",function(){response.body.should.have.schema(a)});else throw new TypeError('Parameter value must be an object for function "checkJSONSchema(jsonSchema)"');}
function checkLocation(a){if("String"===getType(a))it('should return the location "'+a+'"',function(){response.should.have.header("Location",a)});else throw new TypeError('Parameter value must be a string for function "checkLocation(location)"');}function getRegexGUID(){return"^(?!00000000-0000-0000-0000-000000000000)([0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12})$"}
function getRegexISODateTime(){return"^(?!0001-01-01T00:00:00Z)([0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.?[0-9]*Z)$"}function getRegexURL(){return"^https?://[0-9a-zA-Z-]+\\.[0-9a-zA-Z-]+|https?://localhost"}
function getSchemaHAL(a){a=void 0===a?{}:a;if("Object"===getType(a))return{type:"object",required:["_links","_embedded","_page"],properties:{_links:{type:"object",required:["self","first","last"],properties:{self:{type:"object",required:["href"],properties:{href:{type:"string",pattern:getRegexURL()}}},next:{type:["object","null"],required:["href"],properties:{href:{type:"string",pattern:getRegexURL()}}},previous:{type:["object","null"],required:["href"],properties:{href:{type:"string",pattern:getRegexURL()}}},
first:{type:"object",required:["href"],properties:{href:{type:"string",pattern:getRegexURL()}}},last:{type:"object",required:["href"],properties:{href:{type:"string",pattern:getRegexURL()}}}}},_embedded:{type:"object",required:["resourceList"],properties:{resourceList:{type:"array",items:a}}},_page:{type:"object",required:["size","number"],properties:{size:{type:"number",minimum:0,multipleOf:1},totalElements:{type:"number",minimum:0,multipleOf:1},totalPages:{type:"number",minimum:0,multipleOf:1},
number:{type:"number",minimum:0,multipleOf:1}}}}};throw new TypeError('Parameter value must be an object for function "getSchemaHAL(schemaResourceItems)"');};
